{"version":3,"file":"js/589.3cc3ef8d.js","mappings":"+IAQA,MAAMA,EAAYC,GACPA,EAAIC,WAAW,OAAO,KAAKA,WAAW,OAAQ,KAAKA,WAAW,QAAS,KAAKA,WAAW,QAAS,I,ufCGvG,MAAMC,GAAQC,EAAAA,EAAAA,MACRC,GAASC,EAAAA,EAAAA,MACTC,GAAQC,EAAAA,EAAAA,OAEdC,EAAAA,EAAAA,KAAe,KACXC,IAEAL,EAAOM,UACPC,IACAC,QAAQC,IAAIP,EAAMQ,OAAOC,QAAQ,IAGrC,MAAMC,GAAcC,EAAAA,EAAAA,IAAI,IAClBC,GAAWD,EAAAA,EAAAA,IAAI,IACfE,GAAcF,EAAAA,EAAAA,IAAI,IAClBG,GAAgBH,EAAAA,EAAAA,IAAI,IACpBI,GAAWJ,EAAAA,EAAAA,IAAI,IAEfR,EAAsBa,UACxBpB,EAAMqB,OAAO,uBAAuB,SAC9BC,EAAAA,EAAMC,KAAK,eAAe,CAACC,SAAS,UACzCC,MAAMC,IACHP,EAASQ,MAAQD,EAAIE,KAAKC,YAC1BnB,QAAQC,IAAI,OAAOe,EAAIE,KAAKC,YAAY,IAE3CC,OAAOJ,IACJhB,QAAQqB,MAAM,KAAML,EAAI,IAE5B1B,EAAMqB,OAAO,uBAAuB,EAAM,EAGxCZ,EAAcW,UAChBpB,EAAMqB,OAAO,uBAAuB,SAC9BC,EAAAA,EAAMC,KAAK,eAAe,CAACS,IAAI5B,EAAMQ,OAAOC,UACjDY,MAAMC,IACHhB,QAAQC,IAAI,OAAOe,EAAIE,KAAKK,aAC5BnB,EAAYa,MAAQD,EAAIE,KAAKK,YAAYC,SACzClB,EAASW,OAAQ9B,EAAAA,EAAAA,GAAU6B,EAAIE,KAAKK,YAAYE,OAChDlB,EAAYU,OAAQ9B,EAAAA,EAAAA,GAAU6B,EAAIE,KAAKK,YAAYG,WACnDlB,EAAcS,MAAQD,EAAIE,KAAKK,YAAYI,SAAS,IAEvDP,OAAOJ,IACJhB,QAAQqB,MAAM,KAAML,EAAI,IAE5B1B,EAAMqB,OAAO,uBAAuB,EAAM,EAQxCiB,EAAiBA,IAIK,IAArBxB,EAAYa,OACXY,MAAM,UACNC,SAASC,eAAe,eAAeC,SAChC,GAGU,IAAlB1B,EAASW,OACRY,MAAM,UACNC,SAASC,eAAe,YAAYC,SAC7B,GAGa,IAArBzB,EAAYU,OACXY,MAAM,UACNC,SAASC,eAAe,eAAeC,SAChC,IAGX1C,EAAMqB,OAAO,uBAAuB,GACpCC,EAAAA,EAAMC,KAAK,qBAAsB,CAACoB,IAAIvC,EAAMQ,OAAOC,QAAQ+B,SAAS9B,EAAYa,MAAMkB,MAAM7B,EAASW,MAAMmB,SAAS7B,EAAYU,QAC/HF,MAAMC,IAEH,GADAhB,QAAQC,IAAI,OAAOe,EAAIE,MACA,QAApBF,EAAIE,KAAKmB,QAKR,OADAR,MAAMb,EAAIE,KAAKoB,SACR,EAHP9C,EAAO+C,IAAI,EAIf,IAEHnB,OAAOJ,IACJa,MAAMb,GACNhB,QAAQqB,MAAM,KAAML,EAAI,IAE5B1B,EAAMqB,OAAO,uBAAuB,QACpCX,QAAQC,IAAIG,EAAYa,MAAMX,EAASW,MAAMV,EAAYU,QAGvDuB,EAAUA,KACZhD,EAAO+C,IAAI,EAAE,E,6+BCxGrB,MAAME,EAAc,EAEpB,O","sources":["webpack://vue_test/./src/utils/XSSutil.js","webpack://vue_test/./src/views/board/boardEdit.vue","webpack://vue_test/./src/views/board/boardEdit.vue?4600"],"sourcesContent":["\r\n/**\r\n * XSS 대비 서버에서 변환된 값이(ex:&lt;) 들어오면 클라이언트 화면에서 vue는 outerHTML방식으로 그대로보여줌\r\n * 그래서 다시 변환해서 보여주는 함수.\r\n * 그냥 공통 함수임\r\n * @param {*} str \r\n * @returns \r\n */\r\nconst changeXSS =(str) => {\r\n    return str.replaceAll('&lt;','<').replaceAll('&gt;', '>').replaceAll('&#40;', '(').replaceAll('&#41;', ')');\r\n}\r\nexport {changeXSS}\r\n","<script setup>\r\nimport BaseHeader from '@/components/common/header/baseHeader.vue'\r\nimport BaseFooter from '@/components/common/footer/baseFooter.vue'\r\n\r\nimport { ref, onBeforeMount} from 'vue';\r\nimport axios from \"axios\";\r\nimport { useStore } from \"vuex\";\r\n\r\nimport { useRouter,useRoute } from 'vue-router'\r\n\r\nimport { changeXSS } from '../../utils/XSSutil'\r\n\r\n    const store = useStore();\r\n    const router = useRouter();\r\n    const route = useRoute();\r\n\r\n    onBeforeMount( () => {\r\n        getCategoryCodeList();\r\n\r\n        router.isReady();\r\n        getBoardOne();\r\n        console.log(route.params.pageKey);\r\n    });\r\n\r\n    const srcCategory = ref('');\r\n    const srcTitle = ref('');\r\n    const srcContents = ref('');\r\n    const srcUploadFile = ref('');\r\n    const codeData = ref([]);\r\n\r\n    const getCategoryCodeList = async () => {\r\n        store.commit(\"changeLoadingStatus\", true);\r\n        await axios.post(\"/codeList.do\",{codeType:'BOARD'})\r\n        .then((res) => {\r\n            codeData.value = res.data.RESULT_LIST;\r\n            console.log('조회결과',res.data.RESULT_LIST);\r\n        })\r\n        .catch((res) => {\r\n            console.error(\"에러\", res);\r\n        });\r\n        store.commit(\"changeLoadingStatus\", false);\r\n    }\r\n\r\n    const getBoardOne = async () => {\r\n        store.commit(\"changeLoadingStatus\", true);\r\n        await axios.post(\"/boardOne.do\",{SEQ:route.params.pageKey})\r\n        .then((res) => {\r\n            console.log('조회결과',res.data.RESULT_DATA);\r\n            srcCategory.value = res.data.RESULT_DATA.CATEGORY;\r\n            srcTitle.value = changeXSS(res.data.RESULT_DATA.TITLE);\r\n            srcContents.value = changeXSS(res.data.RESULT_DATA.BODY_TEXT);\r\n            srcUploadFile.value = res.data.RESULT_DATA.FILE_NAME;\r\n        })\r\n        .catch((res) => {\r\n            console.error(\"에러\", res);\r\n        });\r\n        store.commit(\"changeLoadingStatus\", false);\r\n    }\r\n/*\r\n    let uploadFile;\r\n    const fileDetect = (e) =>{\r\n        uploadFile = e.target.files[0];\r\n    }\r\n*/\r\n    const updateBoardData =() =>{\r\n        // eslint-disable-next-line no-debugger\r\n        //위 주석을 써야 이 debugger가 먹힌다. 전체적으로 풀수도 있으나 나쁜 케이스가 발생 할 수 있다.    debugger;\r\n\r\n        if(srcCategory.value == '') {\r\n            alert('분류가 없어');\r\n            document.getElementById('srcCategory').focus();\r\n            return false;\r\n        }\r\n\r\n        if(srcTitle.value == '') {\r\n            alert('제목이 없어');\r\n            document.getElementById('srcTitle').focus();\r\n            return false;\r\n        }\r\n\r\n        if(srcContents.value == '') {\r\n            alert('내용이 없어');\r\n            document.getElementById('srcContents').focus();\r\n            return false;\r\n        }\r\n\r\n        store.commit(\"changeLoadingStatus\", true);\r\n        axios.post(\"/updateBoardOne.do\", {seq:route.params.pageKey,category:srcCategory.value,title:srcTitle.value,bodyText:srcContents.value} )\r\n        .then((res) => {\r\n            console.log('조회결과',res.data);\r\n            if(res.data.RESCODE == '0000') {\r\n//                router.replace('/boardList');\r\n                router.go(-1);\r\n            } else {\r\n                alert(res.data.RESMSG);\r\n                return false;    \r\n            }\r\n        })\r\n        .catch((res) => {\r\n            alert(res);\r\n            console.error(\"에러\", res);\r\n        });\r\n        store.commit(\"changeLoadingStatus\", false);\r\n        console.log(srcCategory.value,srcTitle.value,srcContents.value);\r\n    }\r\n\r\n    const moveList =() =>{\r\n        router.go(-1);\r\n    }\r\n\r\n</script>\r\n\r\n<template>\r\n  <BaseHeader title=\"게시판\"></BaseHeader>\r\n  <div>\r\n    <main>\r\n    <div>\r\n      글수정\r\n    </div>\r\n    <div>\r\n        <label for=\"srcCategory\">분류</label>\r\n        <select v-model=\"srcCategory\" id=\"srcCategory\">\r\n            <option disabled value=\"\">선택하세요</option>\r\n            <option v-for=\"option in codeData\" :value=\"option.CODE\" :key=\"option\">\r\n            {{ option.CODE_NAME }}\r\n            </option>\r\n        </select>\r\n        <label for=\"srcTitle\">제목</label>\r\n        <input v-model=\"srcTitle\" id=\"srcTitle\" placeholder=\"제목입력\" />\r\n    </div>\r\n    <div style=\"padding: 10px;\"></div>\r\n    <div>\r\n        <label for=\"srcContents\">내용</label>\r\n        <textarea v-model=\"srcContents\" id=\"srcContents\" cols=\"54\" rows=\"10\" placeholder=\"내용입력\" ></textarea>\r\n    </div>\r\n    <div>\r\n        <span>첨부파일:{{srcUploadFile}}</span>\r\n    </div>\r\n    <div class=\"divRightAlign\">\r\n        <button type=\"button\" id=\"searchBtn\" @click=\"updateBoardData\">수정</button>\r\n        <button type=\"button\" id=\"searchBtn\" @click=\"moveList\">목록</button>\r\n    </div>\r\n  </main>\r\n</div>\r\n<BaseFooter></BaseFooter>\r\n</template>\r\n\r\n","import script from \"./boardEdit.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./boardEdit.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["changeXSS","str","replaceAll","store","useStore","router","useRouter","route","useRoute","onBeforeMount","getCategoryCodeList","isReady","getBoardOne","console","log","params","pageKey","srcCategory","ref","srcTitle","srcContents","srcUploadFile","codeData","async","commit","axios","post","codeType","then","res","value","data","RESULT_LIST","catch","error","SEQ","RESULT_DATA","CATEGORY","TITLE","BODY_TEXT","FILE_NAME","updateBoardData","alert","document","getElementById","focus","seq","category","title","bodyText","RESCODE","RESMSG","go","moveList","__exports__"],"sourceRoot":""}