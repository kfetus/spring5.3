{"version":3,"file":"js/881.850b66e8.js","mappings":"ynBAUI,MAAMA,GAAQC,EAAAA,EAAAA,MACRC,GAASC,EAAAA,EAAAA,OAEfC,EAAAA,EAAAA,KAAe,KACXC,GAAqB,IAIzB,MAAMC,GAAcC,EAAAA,EAAAA,IAAI,IAClBC,GAAWD,EAAAA,EAAAA,IAAI,IACfE,GAAcF,EAAAA,EAAAA,IAAI,IAClBG,GAAWH,EAAAA,EAAAA,IAAI,IAEfF,EAAsBM,UACxBX,EAAMY,OAAO,uBAAuB,SAC9BC,EAAAA,EAAMC,KAAK,eAAe,CAACC,SAAS,UACzCC,MAAMC,IACHP,EAASQ,MAAQD,EAAIE,KAAKC,YAC1BC,QAAQC,IAAI,OAAOL,EAAIE,KAAKC,YAAY,IAE3CG,OAAON,IACJI,QAAQG,MAAM,KAAMP,EAAI,IAE5BjB,EAAMY,OAAO,uBAAuB,EAAM,EAG9C,IAAIa,EACJ,MAAMC,EAAcC,IAChBF,EAAaE,EAAEC,OAAOC,MAAM,EAAE,EAG5BC,EAAeA,KAIjB,GAAwB,IAArBxB,EAAYY,MAGX,OAFAa,MAAM,UACNC,SAASC,eAAe,eAAeC,SAChC,EAGX,GAAqB,IAAlB1B,EAASU,MAGR,OAFAa,MAAM,UACNC,SAASC,eAAe,YAAYC,SAC7B,EAGX,GAAwB,IAArBzB,EAAYS,MAGX,OAFAa,MAAM,UACNC,SAASC,eAAe,eAAeC,SAChC,EAIX,MAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,WAAW/B,EAAYY,OACvCiB,EAASE,OAAO,QAAQ7B,EAASU,OACjCiB,EAASE,OAAO,WAAW5B,EAAYS,OACvCiB,EAASE,OAAO,aAAaZ,GAE7BzB,EAAMY,OAAO,uBAAuB,GACpCC,EAAAA,EAAMC,KAAK,qBAAsBqB,EAAW,CAACG,QAAQ,CAAC,eAAe,yBACpEtB,MAAMC,IACHI,QAAQC,IAAI,OAAOL,EAAIE,MACA,QAApBF,EAAIE,KAAKoB,SACRrC,EAAOsC,QAAQ,aACnB,IAEHjB,OAAON,IACJc,MAAMd,GACNI,QAAQG,MAAM,KAAMP,EAAI,IAE5BjB,EAAMY,OAAO,uBAAuB,GACpCS,QAAQC,IAAIhB,EAAYY,MAAMV,EAASU,MAAMT,EAAYS,MAAM,EAG7DuB,EAAUA,KAGZvC,EAAOwC,IAAI,EAAE,E,ggCCtFrB,MAAMC,EAAc,EAEpB,O","sources":["webpack://vue_test/./src/views/board/boardCreate.vue","webpack://vue_test/./src/views/board/boardCreate.vue?3136"],"sourcesContent":["<script setup>\r\nimport BaseHeader from '@/components/common/header/baseHeader.vue'\r\nimport BaseFooter from '@/components/common/footer/baseFooter.vue'\r\n\r\nimport { ref, onBeforeMount} from 'vue';\r\nimport axios from \"axios\";\r\nimport { useStore } from \"vuex\";\r\n\r\nimport { useRouter } from 'vue-router'\r\n\r\n    const store = useStore();\r\n    const router = useRouter();\r\n\r\n    onBeforeMount( () => {\r\n        getCategoryCodeList();\r\n    });\r\n\r\n\r\n    const srcCategory = ref('');\r\n    const srcTitle = ref('');\r\n    const srcContents = ref('');\r\n    const codeData = ref([]);\r\n\r\n    const getCategoryCodeList = async () => {\r\n        store.commit(\"changeLoadingStatus\", true);\r\n        await axios.post(\"/codeList.do\",{codeType:'BOARD'})\r\n        .then((res) => {\r\n            codeData.value = res.data.RESULT_LIST;\r\n            console.log('조회결과',res.data.RESULT_LIST);\r\n        })\r\n        .catch((res) => {\r\n            console.error(\"에러\", res);\r\n        });\r\n        store.commit(\"changeLoadingStatus\", false);\r\n    }\r\n\r\n    let uploadFile;\r\n    const fileDetect = (e) =>{\r\n        uploadFile = e.target.files[0];\r\n    }\r\n\r\n    const saveBoardData =() =>{\r\n        // eslint-disable-next-line no-debugger\r\n        //위 주석을 써야 이 debugger가 먹힌다. 전체적으로 풀수도 있으나 나쁜 케이스가 발생 할 수 있다.    debugger;\r\n\r\n        if(srcCategory.value == '') {\r\n            alert('분류가 없어');\r\n            document.getElementById('srcCategory').focus();\r\n            return false;\r\n        }\r\n\r\n        if(srcTitle.value == '') {\r\n            alert('제목이 없어');\r\n            document.getElementById('srcTitle').focus();\r\n            return false;\r\n        }\r\n\r\n        if(srcContents.value == '') {\r\n            alert('내용이 없어');\r\n            document.getElementById('srcContents').focus();\r\n            return false;\r\n        }\r\n\r\n        //file upload시 필요 부분\r\n        const formData = new FormData();\r\n        formData.append('category',srcCategory.value);\r\n        formData.append('title',srcTitle.value);\r\n        formData.append('bodyText',srcContents.value);\r\n        formData.append('multiFiles',uploadFile);\r\n\r\n        store.commit(\"changeLoadingStatus\", true);\r\n        axios.post(\"/insertBoardOne.do\", formData , {headers:{'Content-Type':'multipart/form-data'}})\r\n        .then((res) => {\r\n            console.log('조회결과',res.data);\r\n            if(res.data.RESCODE == '0000') {\r\n                router.replace('/boardList');\r\n            }\r\n        })\r\n        .catch((res) => {\r\n            alert(res);\r\n            console.error(\"에러\", res);\r\n        });\r\n        store.commit(\"changeLoadingStatus\", false);\r\n        console.log(srcCategory.value,srcTitle.value,srcContents.value);\r\n    }\r\n\r\n    const moveList =() =>{\r\n//router.replace 는 현재 페이지를 지정페이지로 변경. 즉 수정,삭제 페이지에서 저장 후 이동 페이지를 replace로 하면 해당 등록,수정 페이지가 history에서 삭제된다.\r\n//        router.replace('/boardList')\r\n        router.go(-1);\r\n    }\r\n\r\n</script>\r\n\r\n<template>\r\n  <BaseHeader title=\"게시판\"></BaseHeader>\r\n  <div>\r\n    <main>\r\n    <div>\r\n      글작성\r\n    </div>\r\n    <div>\r\n        <label for=\"srcCategory\">분류</label>\r\n        <select v-model=\"srcCategory\" id=\"srcCategory\">\r\n            <option disabled value=\"\">선택하세요</option>\r\n            <option v-for=\"option in codeData\" :value=\"option.CODE\" :key=\"option\">\r\n            {{ option.CODE_NAME }}\r\n            </option>\r\n        </select>\r\n        <label for=\"srcTitle\">제목</label>\r\n        <input v-model=\"srcTitle\" id=\"srcTitle\" placeholder=\"제목입력\" />\r\n    </div>\r\n    <div style=\"padding: 10px;\"></div>\r\n    <div>\r\n        <label for=\"srcContents\">내용</label>\r\n        <textarea v-model=\"srcContents\" id=\"srcContents\" cols=\"54\" rows=\"10\" placeholder=\"내용입력\" ></textarea>\r\n    </div>\r\n    <div>\r\n        <label for=\"srcAddFile\">첨부파일</label>\r\n        <input type=\"file\" id=\"srcAddFile\" @change=\"fileDetect\" />\r\n    </div>\r\n    <div class=\"divRightAlign\">\r\n        <button type=\"button\" id=\"searchBtn\" @click=\"saveBoardData\">저장</button>\r\n        <button type=\"button\" id=\"searchBtn\" @click=\"moveList\">목록</button>\r\n    </div>\r\n  </main>\r\n</div>\r\n<BaseFooter></BaseFooter>\r\n</template>\r\n\r\n","import script from \"./boardCreate.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./boardCreate.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["store","useStore","router","useRouter","onBeforeMount","getCategoryCodeList","srcCategory","ref","srcTitle","srcContents","codeData","async","commit","axios","post","codeType","then","res","value","data","RESULT_LIST","console","log","catch","error","uploadFile","fileDetect","e","target","files","saveBoardData","alert","document","getElementById","focus","formData","FormData","append","headers","RESCODE","replace","moveList","go","__exports__"],"sourceRoot":""}